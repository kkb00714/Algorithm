# 31. 역수열 (그리디)

# 문제
# 1부터 n까지의 수를 한 번씩만 사용하여 이루어진 
# 수열이 있을 때, 1부터 n까지 각각의 수 앞에 놓여 있는 
# 자신보다 큰 수들의 개수를 수열로 표현한 것을 역수열이라 한다.

# 예를 들어 다음과 같은 수열의 경우
#  4 8 6 2 5 1 3 7

# 1앞에 놓인 1보다 큰 수는 4, 8, 6, 2, 5. 이렇게 5개이고,
# 2앞에 놓인 2보다 큰 수는 4, 8, 6. 이렇게 3개,
# 3앞에 놓인 3보다 큰 수는 4, 8, 6, 5 이렇게 4개......

# 따라서 4 8 6 2 5 1 3 7의 역수열은 5 3 4 0 2 1 1 0 이 된다.
# n과 1부터 n까지의 수를 사용하여 이루어진 수열의 
# 역수열이 주어졌을 때, 원래의 수열을 출력하는 프로그램을 작성.

# 입력 설명 
# 첫 번째 줄에 자연수 N(3<=N<100)이 주어지고, 
# 두 번째 줄에는 역수열이 숫자 사이에 한칸의 공백을 두고 주어진다.

# 출력 설명
# 원래 수열을 출력합니다

# 입력 예제
# 8
# 5 3 4 0 2 1 1 0

# 출력 예제
# 4 8 6 2 5 1 3 7


n = int(input())
a = list(map(int, input().split()))
seq = [0] * n

# 오름차 순으로 진행해야 한다고 생각해야 함 (1 ~ n)

for i in range(n):
    for j in range(n):
        if a[i] == 0 and seq[j] == 0:
        # a[i] 의 의미 => 자기 앞의 빈 공간을 확보했다는 의미
        # seq[j] 가 비어있는 경우,
        # seq[j]에 i + 1
            seq[j] = i + 1
            break # j를 break
        elif seq[j] == 0:
        # seq[j] 가 비어있는 경우 (빈 자리가 있는 경우)
            a[i] -= 1
            # a[i] 값을 하나 빼서 값을 넣음

for x in seq:
    print(x, end=' ')
