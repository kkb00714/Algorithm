# 23. 랜선자르기(결정알고리즘)

# 문제
# 엘리트 학원은 자체적으로 K개의 랜선을 가지고 있다. 
# 그러나 K개의 랜선은 길이가 제각각이다. 
# 랜선을 모두 N개의 같은 길이의 랜선으로 만들고 싶었기 때문에
# K개의 랜선을 잘라서 만들어야 한다. 

# 예를 들어 300cm 짜리 랜선에서 140cm 짜리 랜선을 두 개 잘라내면
# 20cm 은 버려야 한다. (이미 자른 랜선은 붙일 수 없다.)
# 편의를 위해 랜선을 자를때 손실되는 길이는 없다고 가정하며,
# 기존의 K개의 랜선으로 N개의 랜선을 만들 수 없는 경우는 
# 없다고 가정하자. 

# 그리고 자를 때는 항상 센티미터 단위로 정수 길이만큼 
# 자른다고 가정하자. 
# N개보다 많이 만드는 것도 N개를 만드는 것에 포함된다. 
# 이때 만들 수 있는 최대 랜선의 길이를 구하는 프로그램을 작성.


# 입력 설명 
# 첫째 줄에는 엘리트학원이 이미 가지고 있는 랜선의 개수 K, 
# 그리고 필요한 랜선의 개수 N이 입력된다. 
# K는 1이상 10,000이하의 정수이고, N은 1이상 1,000,000이하의 정수이다. 
# 그리고 항상 K ≦ N 이다. 
# 그 후 K줄에 걸쳐 이미 가지고 있는 각 랜선의 길이가 
# 센티미터 단위의 (2^31 - 1)이하의 자연수로 주어진다.

# 출력 설명
# 첫째 줄에 N개를 만들 수 있는 랜선의 최대 길이를 센티미터 단위의 정수로 출력한다.

# 입력 예제
# 4 11
# 802
# 743
# 457
# 539

# 출력 예제
# 200



# 결정 알고리즘
# => 우리가 찾고자 하는 답이 특정 범위 안에 있다는 것을 알 수 있을 때
# => 중앙 값을 정해두고 그 값이 답으로써 
# => 유효한지 아닌지 확인하는 작업을 할 때 사용

def Count(len):
    cnt = 0
    for x in Line:
        cnt += (x // len)
    return cnt

k, n = map(int, input().split())
Line = []
res = 0 
largest= 0
for i in range(k):
    tmp = int(input())
    Line.append(tmp)
    largest = max(largest, tmp) 
    # 가장 큰 값 갱신
lt = 1
rt = largest

# 이분탐색
while lt<=rt:
    mid = (lt + rt) // 2
    # 랜선의 길이가 됨
    if Count(mid) >= n:
        res = mid
        lt = mid + 1
        # 작은 쪽은 버리기
    else:
        rt = mid - 1
        # 큰 쪽은 버리기
print(res)
