# 22. 이분검색

# 문제
# 임의의 N개의 숫자가 입력으로 주어집니다. 
# N개의 수를 오름차순으로 정렬한 다음 
# N개의 수 중 한 개의 수인 M이 주어지면 
# 이분검색으로 M이 정렬된 상태에서 
# 몇 번째에 있는지 구하는 프로그램을 작성하세요. 
# 단 중복값은 존재하지 않습니다.


# 입력 설명 
# 첫 줄에 한 줄에 자연수 N(3<=N<=1,000,000)과 M이 주어집니다.
# 두 번째 줄에 N개의 수가 공백을 사이에 두고 주어집니다.

# 출력 설명
# 첫 줄에 정렬 후 M의 값의 위치 번호를 출력한다.

# 입력 예제
# 8 32
# 23 87 65 12 57 32 99 81

# 출력 예제
# 3

# 이분 탐색을 통해 탐색 범위를 줄임으로써 검색 시간이 줄어듦.
# 만약 1024개의 데이터가 있으면 최대 10번만에 무조건 값을 찾을 수 있음. (1024 -> 512 -> 256 ...)
# log n 번만에 된다고 표현.
n, m = map(int, input().split())
a = list(map(int, input().split()))
a.sort()
lt=0 # 왼쪽 맨 끝 
rt=n-1 # 오른쪽 맨 끝

while lt<=rt:
    # lt == rt 이면 탐색이 종료된 것으로 볼 수 있음
    mid=(lt+rt)//2
    # 탐색 범위를 절반씩 줄임
    if a[mid]==m:
    # 만약 mid 가 가리키는 값이 m 이 맞다면
    # 인덱스값을 출력하고 while문 종료
        print(mid+1)
        break
    elif a[mid]>m:
    # 만약 찾지 못했을 경우, 값은 mid보다 작은 쪽에 있을 것이므로
        rt=mid-1
    else:
    # ", mid 보다 큰 쪽에 있을 경우
        lt=mid+1






