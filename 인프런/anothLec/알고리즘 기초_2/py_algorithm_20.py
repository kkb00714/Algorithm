# 20. 스도쿠 검사

# 문제
# 스도쿠는 매우 간단한 숫자 퍼즐이다. 
# 9×9 크기의 보드가 있을 때, 각 행과 각 열, 
# 그리고 9개의 3×3 크기의 보드에 1부터 9까지의 
# 숫자가 중복 없이 나타나도록 보드를 채우면 된다.

# 위 그림은 스도쿠를 정확하게 푼 경우이다. 
# 각 행에 1부터 9까지의 숫자가 중복 없이 나오고, 
# 각 열에 1부터 9까지의 숫자가 중복 없이 나오고, 
# 각 3×3짜리 사각형(9개이며, 위에서 색깔로 표시되었다)
# 에 1부터 9까지의 숫자가 중복 없이 나오기 때문이다.
# 완성된 9×9 크기의 수도쿠를 
# 정확하게 풀었으면 “YES", 
# 잘 못 풀었으면 ”NO"를 출력하는 프로그램을 작성.

# 입력 설명 
# 첫 번째 줄에 완성된 9×9 스도쿠가 주어집니다.

# 출력 설명
# 첫째 줄에 “YES" 또는 ”NO"를 출력하세요.

# 입력 예제
# 1 4 3 6 2 8 5 7 9
# 5 7 2 1 3 9 4 6 8
# 9 8 6 7 5 4 2 3 1
# 3 9 1 5 4 2 7 8 6
# 4 6 8 9 1 7 3 5 2
# 7 2 5 8 6 3 9 1 4
# 2 3 7 4 8 1 6 9 5
# 6 1 9 2 7 5 8 4 3
# 8 5 4 3 9 6 1 2 7

# 출력 예제
# YES


def check(a):
    for i in range(9):
        # 가로세로 체크를 위한 리스트 생성
        ch1=[0]*10 
        ch2=[0]*10
        for j in range(9):
            ch1[a[i][j]]=1 # 열 탐색
            ch2[a[j][i]]=1 # 행 탐색
        if sum(ch1)!=9 or sum(ch2)!=9:
            # 두 체크리스트 중 중복이 하나라도 있으면 False
            return False
    for i in range(3): # 0, 1, 2
        for j in range(3): # 0, 1, 2
            # 그룹 탐색을 위한 리스트
            ch3=[0]*10 
            for k in range(3): # 0, 1, 2
                for s in range(3): # 0, 1, 2
                    ch3[a[i*3+k][j*3+s]]=1
                    # i * 3 + k = 행
                    # j * 3 + s = 열
            if sum(ch3)!=9:
                return False
    return True

a = [list(map(int, input().split())) for _ in range(1, 10)]
if check(a):
    print("YES")
else:
    print("NO")

